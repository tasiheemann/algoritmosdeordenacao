Atividades sobre Insertion Sort

Atividade 1 — Ordenação básica

Implemente um programa que:

Peça ao usuário para digitar 5 números inteiros.

Armazene esses números em um array.

Use o Insertion Sort para ordená-los em ordem crescente.

Mostre o array antes e depois da ordenação.

-------------------------------------------RESPOSTA---------------------------------------------------
using System;

class Program
{
    static void Main()
    {
        int[] numeros = new int[5];

        // Entrada de dados
        Console.WriteLine("Digite 5 números inteiros:");
        for (int i = 0; i < numeros.Length; i++)
        {
            Console.Write($"Número {i + 1}: ");
            numeros[i] = int.Parse(Console.ReadLine());
        }

        // Mostra o array antes da ordenação
        Console.WriteLine("\nArray antes da ordenação:");
        MostrarArray(numeros);

        // Ordena usando Insertion Sort com swap
        InsertionSortComSwap(numeros);

        // Mostra o array depois da ordenação
        Console.WriteLine("\nArray depois da ordenação:");
        MostrarArray(numeros);
    }

    // Função que implementa o algoritmo Insertion Sort usando troca (swap)
    static void InsertionSortComSwap(int[] array)
    {
        for (int i = 1; i < array.Length; i++)
        {
            int j = i;

            // Enquanto o elemento atual for menor que o anterior, troca
            while (j > 0 && array[j] < array[j - 1])
            {
                Swap(array, j, j - 1);
                j--; // anda uma posição para trás
            }
        }
    }

    // Função auxiliar para trocar dois elementos de posição
    static void Swap(int[] array, int a, int b)
    {
        int temp = array[a];
        array[a] = array[b];
        array[b] = temp;
    }

    // Função auxiliar para exibir o array na tela
    static void MostrarArray(int[] array)
    {
        Console.WriteLine(string.Join(" ", array));
    }
}











Atividade 2 — Contar o número de trocas

Adapte o algoritmo do Insertion Sort para:

Contar quantas trocas foram realizadas durante a ordenação.

Exibir esse total ao final da execução.

Desafio extra: Mostre também o número de comparações feitas.





Atividade 3 — Ordenar nomes

Em vez de números, use um array de strings com nomes de pessoas (ex: "Maria", "João", "Ana").

Ordene-os alfabeticamente com Insertion Sort.

Mostre o resultado.


